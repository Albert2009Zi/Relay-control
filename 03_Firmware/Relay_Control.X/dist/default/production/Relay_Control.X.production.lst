

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 08 14:42:02 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x5E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 29/04/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F675 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0019                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0090                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0096                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0019                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  0090                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0096                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0019                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  008C                     	;# 
   136  008E                     	;# 
   137  0090                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0096                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0019                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  008C                     	;# 
   168  008E                     	;# 
   169  0090                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0096                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0019                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  008C                     	;# 
   200  008E                     	;# 
   201  0090                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0096                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0003                     _STATUSbits	set	3
   214  0005                     _GPIO	set	5
   215  0019                     _CMCON	set	25
   216  001F                     _ADCON0	set	31
   217  000B                     _INTCONbits	set	11
   218  0059                     _INTF	set	89
   219  0028                     _GP0	set	40
   220  002C                     _GP4	set	44
   221  002D                     _GP5	set	45
   222  009D                     _EECON2	set	157
   223  009A                     _EEDATA	set	154
   224  009C                     _EECON1	set	156
   225  009B                     _EEADR	set	155
   226  009C                     _EECON1bits	set	156
   227  0081                     _OPTION_REGbits	set	129
   228  0099                     _VRCON	set	153
   229  009F                     _ANSEL	set	159
   230  042A                     _TRISIO2	set	1066
   231  0428                     _TRISIO0	set	1064
   232  042D                     _TRISIO5	set	1069
   233  042C                     _TRISIO4	set	1068
   234                           
   235                           	psect	cinit
   236  000C                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000C                     __initialization:
   240                           
   241                           ; Clear objects allocated to BANK0
   242  000C  1283               	bcf	3,5	;RP0=0, select bank0
   243  000D  01A8               	clrf	__pbssBANK0& (0+127)
   244  000E                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  000E                     __end_of__initialization:
   248  000E  0183               	clrf	3
   249  000F  2810               	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssBANK0
   252  0028                     __pbssBANK0:
   253  0028                     _stateChangeFlag:
   254  0028                     	ds	1
   255                           
   256                           	psect	cstackCOMMON
   257  0000                     __pcstackCOMMON:
   258  0000                     ??_IRQConfig:
   259  0000                     ??_ButtonEvent:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           	psect	cstackBANK0
   264  0020                     __pcstackBANK0:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0020                     ?_eeprom_read:
   268  0020                     ?_IRQConfig:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0020                     ?_initUc:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0020                     ?_ButtonEvent:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0020                     ?_BtnInterrupt:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0020                     ??_BtnInterrupt:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0020                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 2 bytes @ 0x0
   288  0020                     	ds	2
   289  0022                     ??_eeprom_read:
   290  0022                     ?_eeprom_write:	
   291                           ; 1 bytes @ 0x2
   292                           
   293  0022                     eeprom_write@value:	
   294                           ; 1 bytes @ 0x2
   295                           
   296                           
   297                           ; 1 bytes @ 0x2
   298  0022                     	ds	1
   299  0023                     ??_eeprom_write:
   300  0023                     eeprom_read@addr:	
   301                           ; 1 bytes @ 0x3
   302                           
   303                           
   304                           ; 1 bytes @ 0x3
   305  0023                     	ds	1
   306  0024                     ??_initUc:
   307  0024                     eeprom_write@addr:	
   308                           ; 1 bytes @ 0x4
   309                           
   310                           
   311                           ; 1 bytes @ 0x4
   312  0024                     	ds	2
   313  0026                     ??_main:
   314                           
   315                           ; 1 bytes @ 0x6
   316  0026                     	ds	2
   317                           
   318                           	psect	maintext
   319  0010                     __pmaintext:	
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 60 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  2   45[None  ] int 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0, pclath, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : B00/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0
   339 ;;      Params:         0       0
   340 ;;      Locals:         0       0
   341 ;;      Temps:          0       2
   342 ;;      Totals:         0       2
   343 ;;Total ram usage:        2 bytes
   344 ;; Hardware stack levels required when called:    4
   345 ;; This function calls:
   346 ;;		_IRQConfig
   347 ;;		_eeprom_write
   348 ;;		_initUc
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _main
   356  0010                     _main:
   357  0010                     l841:	
   358                           ;incstack = 0
   359                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   360                           
   361                           
   362                           ;main.c: 62:     initUc();
   363  0010  2047               	fcall	_initUc
   364  0011                     l843:
   365                           
   366                           ;main.c: 64:     _delay((unsigned long)((20)*(4000000/4000.0)));
   367  0011  301A               	movlw	26
   368  0012  1283               	bcf	3,5	;RP0=0, select bank0
   369  0013  00A7               	movwf	??_main+1
   370  0014  30F8               	movlw	248
   371  0015  00A6               	movwf	??_main
   372  0016                     u167:
   373  0016  0BA6               	decfsz	??_main,f
   374  0017  2816               	goto	u167
   375  0018  0BA7               	decfsz	??_main+1,f
   376  0019  2816               	goto	u167
   377  001A  0000               	nop
   378  001B                     l845:
   379                           
   380                           ;main.c: 65:     eeprom_write (0x00, 0x0B);
   381  001B  300B               	movlw	11
   382  001C  1283               	bcf	3,5	;RP0=0, select bank0
   383  001D  00A6               	movwf	??_main
   384  001E  0826               	movf	??_main,w
   385  001F  00A2               	movwf	eeprom_write@value
   386  0020  3000               	movlw	0
   387  0021  2077               	fcall	_eeprom_write
   388                           
   389                           ;main.c: 66:     _delay((unsigned long)((20)*(4000000/4000.0)));
   390  0022  301A               	movlw	26
   391  0023  1283               	bcf	3,5	;RP0=0, select bank0
   392  0024  00A7               	movwf	??_main+1
   393  0025  30F8               	movlw	248
   394  0026  00A6               	movwf	??_main
   395  0027                     u177:
   396  0027  0BA6               	decfsz	??_main,f
   397  0028  2827               	goto	u177
   398  0029  0BA7               	decfsz	??_main+1,f
   399  002A  2827               	goto	u177
   400  002B  0000               	nop
   401  002C                     l847:
   402                           
   403                           ;main.c: 68:     IRQConfig();
   404  002C  20D0               	fcall	_IRQConfig
   405  002D                     l849:
   406                           
   407                           ;main.c: 70:     {;main.c: 71:         if (stateChangeFlag == 1){
   408  002D  1283               	bcf	3,5	;RP0=0, select bank0
   409  002E  0328               	decf	_stateChangeFlag,w
   410  002F  1D03               	btfss	3,2
   411  0030  2832               	goto	u141
   412  0031  2833               	goto	u140
   413  0032                     u141:
   414  0032  282D               	goto	l849
   415  0033                     u140:
   416  0033                     l851:
   417                           
   418                           ;main.c: 72:            eeprom_write (0x01, GPIO);
   419  0033  0805               	movf	5,w	;volatile
   420  0034  00A6               	movwf	??_main
   421  0035  0826               	movf	??_main,w
   422  0036  00A2               	movwf	eeprom_write@value
   423  0037  3001               	movlw	1
   424  0038  2077               	fcall	_eeprom_write
   425  0039                     l853:
   426                           
   427                           ;main.c: 73:            _delay((unsigned long)((20)*(4000000/4000.0)));
   428  0039  301A               	movlw	26
   429  003A  1283               	bcf	3,5	;RP0=0, select bank0
   430  003B  00A7               	movwf	??_main+1
   431  003C  30F8               	movlw	248
   432  003D  00A6               	movwf	??_main
   433  003E                     u187:
   434  003E  0BA6               	decfsz	??_main,f
   435  003F  283E               	goto	u187
   436  0040  0BA7               	decfsz	??_main+1,f
   437  0041  283E               	goto	u187
   438  0042  0000               	nop
   439  0043                     l855:
   440                           
   441                           ;main.c: 74:            stateChangeFlag = 0;
   442  0043  1283               	bcf	3,5	;RP0=0, select bank0
   443  0044  01A8               	clrf	_stateChangeFlag
   444  0045  282D               	goto	l849
   445  0046  280B               	ljmp	start
   446  0047                     __end_of_main:
   447                           
   448                           	psect	text1
   449  0047                     __ptext1:	
   450 ;; *************** function _initUc *****************
   451 ;; Defined at:
   452 ;;		line 28 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0
   466 ;;      Params:         0       0
   467 ;;      Locals:         0       0
   468 ;;      Temps:          0       2
   469 ;;      Totals:         0       2
   470 ;;Total ram usage:        2 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    3
   473 ;; This function calls:
   474 ;;		_eeprom_read
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _initUc
   482  0047                     _initUc:
   483  0047                     l789:	
   484                           ;incstack = 0
   485                           ; Regs used in _initUc: [wreg+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;main.c: 29:     (INTCONbits.GIE = 1);
   489  0047  178B               	bsf	11,7	;volatile
   490  0048                     l791:
   491                           
   492                           ;main.c: 30:     ANSEL = 0x00;
   493  0048  1683               	bsf	3,5	;RP0=1, select bank1
   494  0049  019F               	clrf	31	;volatile
   495                           
   496                           ;main.c: 31:  ADCON0 = 0x00;
   497  004A  1283               	bcf	3,5	;RP0=0, select bank0
   498  004B  019F               	clrf	31	;volatile
   499  004C                     l793:
   500                           
   501                           ;main.c: 32:  CMCON = 0x07;
   502  004C  3007               	movlw	7
   503  004D  0099               	movwf	25	;volatile
   504  004E                     l795:
   505                           
   506                           ;main.c: 33:  VRCON = 0x00;
   507  004E  1683               	bsf	3,5	;RP0=1, select bank1
   508  004F  0199               	clrf	25	;volatile
   509  0050                     l797:
   510                           
   511                           ;main.c: 36:     TRISIO4 = 0;
   512  0050  1205               	bcf	5,4	;volatile
   513  0051                     l799:
   514                           
   515                           ;main.c: 37:     TRISIO5 = 0;
   516  0051  1285               	bcf	5,5	;volatile
   517  0052                     l801:
   518                           
   519                           ;main.c: 38:     TRISIO0 = 0;
   520  0052  1005               	bcf	5,0	;volatile
   521  0053                     l803:
   522                           
   523                           ;main.c: 39:     TRISIO2 = 1;
   524  0053  1505               	bsf	5,2	;volatile
   525  0054                     l805:
   526                           
   527                           ;main.c: 41:     GPIO = 0;
   528  0054  1283               	bcf	3,5	;RP0=0, select bank0
   529  0055  0185               	clrf	5	;volatile
   530  0056                     l807:
   531                           
   532                           ;main.c: 43:     _delay((unsigned long)((20)*(4000000/4000.0)));
   533  0056  301A               	movlw	26
   534  0057  00A5               	movwf	??_initUc+1
   535  0058  30F8               	movlw	248
   536  0059  00A4               	movwf	??_initUc
   537  005A                     u197:
   538  005A  0BA4               	decfsz	??_initUc,f
   539  005B  285A               	goto	u197
   540  005C  0BA5               	decfsz	??_initUc+1,f
   541  005D  285A               	goto	u197
   542  005E  0000               	nop
   543  005F                     l809:
   544                           
   545                           ;main.c: 45:     if (eeprom_read(0x00) == 0x0B && eeprom_read(0x01) == 0xFF){
   546  005F  3000               	movlw	0
   547  0060  20A3               	fcall	_eeprom_read
   548  0061  3A0B               	xorlw	11
   549  0062  1D03               	skipz
   550  0063  2865               	goto	u91
   551  0064  2866               	goto	u90
   552  0065                     u91:
   553  0065  2872               	goto	l815
   554  0066                     u90:
   555  0066                     l811:
   556  0066  3001               	movlw	1
   557  0067  20A3               	fcall	_eeprom_read
   558  0068  3AFF               	xorlw	255
   559  0069  1D03               	skipz
   560  006A  286C               	goto	u101
   561  006B  286D               	goto	u100
   562  006C                     u101:
   563  006C  2872               	goto	l815
   564  006D                     u100:
   565  006D                     l813:
   566                           
   567                           ;main.c: 46:   GP5 = 1;
   568  006D  1283               	bcf	3,5	;RP0=0, select bank0
   569  006E  1685               	bsf	5,5	;volatile
   570                           
   571                           ;main.c: 47:         GP4 = 0;
   572  006F  1205               	bcf	5,4	;volatile
   573                           
   574                           ;main.c: 48:         GP0 = 0;
   575  0070  1005               	bcf	5,0	;volatile
   576                           
   577                           ;main.c: 49:     }
   578  0071  2876               	goto	l41
   579  0072                     l815:
   580                           
   581                           ;main.c: 51:     {;main.c: 52:         GPIO = eeprom_read(0x01);
   582  0072  3001               	movlw	1
   583  0073  20A3               	fcall	_eeprom_read
   584  0074  1283               	bcf	3,5	;RP0=0, select bank0
   585  0075  0085               	movwf	5	;volatile
   586  0076                     l41:
   587  0076  0008               	return
   588  0077                     __end_of_initUc:
   589                           
   590                           	psect	text2
   591  00A3                     __ptext2:	
   592 ;; *************** function _eeprom_read *****************
   593 ;; Defined at:
   594 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  addr            1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  addr            1    3[BANK0 ] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      unsigned char 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0
   608 ;;      Params:         0       0
   609 ;;      Locals:         0       1
   610 ;;      Temps:          0       1
   611 ;;      Totals:         0       2
   612 ;;Total ram usage:        2 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    2
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_initUc
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _eeprom_read
   624  00A3                     _eeprom_read:
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   628                           ;eeprom_read@addr stored from wreg
   629  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   630  00A4  00A3               	movwf	eeprom_read@addr
   631  00A5                     l169:	
   632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 8:  do
   633                           
   634  00A5  0064               	clrwdt	;# 
   635  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   636  00A7  189C               	btfsc	28,1	;volsfr
   637  00A8  28AA               	goto	u81
   638  00A9  28AB               	goto	u80
   639  00AA                     u81:
   640  00AA  28A5               	goto	l169
   641  00AB                     u80:
   642  00AB                     l785:
   643                           
   644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
   645  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   646  00AC  0823               	movf	eeprom_read@addr,w
   647  00AD  1683               	bsf	3,5	;RP0=1, select bank1
   648  00AE  009B               	movwf	27	;volatile
   649  00AF  303F               	movlw	63
   650  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   651  00B1  00A2               	movwf	??_eeprom_read
   652  00B2  0822               	movf	??_eeprom_read,w
   653  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   654  00B4  059C               	andwf	28,f	;volsfr
   655  00B5  141C               	bsf	28,0	;volsfr
   656  00B6  081A               	movf	26,w	;volatile
   657  00B7                     l171:
   658  00B7  0008               	return
   659  00B8                     __end_of_eeprom_read:
   660                           
   661                           	psect	text3
   662  0077                     __ptext3:	
   663 ;; *************** function _eeprom_write *****************
   664 ;; Defined at:
   665 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eewrite.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  addr            1    wreg     unsigned char 
   668 ;;  value           1    2[BANK0 ] unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  addr            1    4[BANK0 ] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0
   680 ;;      Params:         0       1
   681 ;;      Locals:         0       1
   682 ;;      Temps:          0       1
   683 ;;      Totals:         0       3
   684 ;;Total ram usage:        3 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _eeprom_write
   696  0077                     _eeprom_write:
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
   700                           ;eeprom_write@addr stored from wreg
   701  0077  1283               	bcf	3,5	;RP0=0, select bank0
   702  0078  00A4               	movwf	eeprom_write@addr
   703  0079                     l188:	
   704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eewrite.c: 6: void eeprom_wr
      +                          ite(unsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.31\pic\so
      +                          urces\c90\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic
      +                          \__eewrite.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (valu
      +                          e); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } 
      +                          INTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1
      +                          ; EECON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
   705                           
   706  0079                     l189:
   707  0079  1683               	bsf	3,5	;RP0=1, select bank1
   708  007A  189C               	btfsc	28,1	;volsfr
   709  007B  287D               	goto	u111
   710  007C  287E               	goto	u110
   711  007D                     u111:
   712  007D  2879               	goto	l189
   713  007E                     u110:
   714  007E                     l817:
   715  007E  1283               	bcf	3,5	;RP0=0, select bank0
   716  007F  0824               	movf	eeprom_write@addr,w
   717  0080  1683               	bsf	3,5	;RP0=1, select bank1
   718  0081  009B               	movwf	27	;volatile
   719  0082  1283               	bcf	3,5	;RP0=0, select bank0
   720  0083  0822               	movf	eeprom_write@value,w
   721  0084  1683               	bsf	3,5	;RP0=1, select bank1
   722  0085  009A               	movwf	26	;volatile
   723  0086                     l819:
   724  0086  303F               	movlw	63
   725  0087  1283               	bcf	3,5	;RP0=0, select bank0
   726  0088  00A3               	movwf	??_eeprom_write
   727  0089  0823               	movf	??_eeprom_write,w
   728  008A  1683               	bsf	3,5	;RP0=1, select bank1
   729  008B  059C               	andwf	28,f	;volsfr
   730  008C                     l821:
   731  008C  1283               	bcf	3,5	;RP0=0, select bank0
   732  008D  1003               	bcf	3,0	;volatile
   733  008E                     l823:
   734  008E  1F8B               	btfss	11,7	;volatile
   735  008F  2891               	goto	u121
   736  0090  2892               	goto	u120
   737  0091                     u121:
   738  0091  2893               	goto	l192
   739  0092                     u120:
   740  0092                     l825:
   741  0092  1403               	bsf	3,0	;volatile
   742  0093                     l192:
   743  0093  138B               	bcf	11,7	;volatile
   744  0094  1683               	bsf	3,5	;RP0=1, select bank1
   745  0095  151C               	bsf	28,2	;volsfr
   746  0096                     l827:
   747  0096  3055               	movlw	85
   748  0097  009D               	movwf	29	;volsfr
   749  0098  30AA               	movlw	170
   750  0099  009D               	movwf	29	;volsfr
   751  009A                     l829:
   752  009A  149C               	bsf	28,1	;volsfr
   753  009B                     l831:
   754  009B  111C               	bcf	28,2	;volsfr
   755  009C                     l833:
   756  009C  1283               	bcf	3,5	;RP0=0, select bank0
   757  009D  1C03               	btfss	3,0	;volatile
   758  009E  28A0               	goto	u131
   759  009F  28A1               	goto	u130
   760  00A0                     u131:
   761  00A0  28A2               	goto	l195
   762  00A1                     u130:
   763  00A1                     l835:
   764  00A1  178B               	bsf	11,7	;volatile
   765  00A2                     l195:
   766  00A2  0008               	return
   767  00A3                     __end_of_eeprom_write:
   768                           
   769                           	psect	text4
   770  00D0                     __ptext4:	
   771 ;; *************** function _IRQConfig *****************
   772 ;; Defined at:
   773 ;;		line 5 in file "hardware.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		None
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0
   787 ;;      Params:         0       0
   788 ;;      Locals:         0       0
   789 ;;      Temps:          0       0
   790 ;;      Totals:         0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    2
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _IRQConfig
   803  00D0                     _IRQConfig:
   804  00D0                     l837:	
   805                           ;incstack = 0
   806                           ; Regs used in _IRQConfig: []
   807                           
   808                           
   809                           ;hardware.c: 6:     INTCONbits.INTE = 1;
   810  00D0  160B               	bsf	11,4	;volatile
   811                           
   812                           ;hardware.c: 7:     OPTION_REGbits.INTEDG = 1;
   813  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   814  00D2  1701               	bsf	1,6	;volatile
   815                           
   816                           ;hardware.c: 8:     INTCONbits.GIE = 1;
   817  00D3  178B               	bsf	11,7	;volatile
   818  00D4                     l67:
   819  00D4  0008               	return
   820  00D5                     __end_of_IRQConfig:
   821                           
   822                           	psect	text5
   823  00B8                     __ptext5:	
   824 ;; *************** function _BtnInterrupt *****************
   825 ;; Defined at:
   826 ;;		line 19 in file "hardware.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0
   840 ;;      Params:         0       0
   841 ;;      Locals:         0       0
   842 ;;      Temps:          0       2
   843 ;;      Totals:         0       2
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		_ButtonEvent
   849 ;; This function is called by:
   850 ;;		Interrupt level 1
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _BtnInterrupt
   856  00B8                     _BtnInterrupt:
   857  00B8                     i1l857:
   858                           
   859                           ;hardware.c: 21:  if(INTF) {
   860  00B8  1C8B               	btfss	11,1	;volatile
   861  00B9  28BB               	goto	u15_21
   862  00BA  28BC               	goto	u15_20
   863  00BB                     u15_21:
   864  00BB  28BE               	goto	i1l863
   865  00BC                     u15_20:
   866  00BC                     i1l859:
   867                           
   868                           ;hardware.c: 22:   ButtonEvent();
   869  00BC  20C8               	fcall	_ButtonEvent
   870  00BD                     i1l861:
   871                           
   872                           ;hardware.c: 23:   INTF = 0;
   873  00BD  108B               	bcf	11,1	;volatile
   874  00BE                     i1l863:
   875                           
   876                           ;hardware.c: 25:    stateChangeFlag = 1;
   877  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   878  00BF  01A8               	clrf	_stateChangeFlag
   879  00C0  0AA8               	incf	_stateChangeFlag,f
   880  00C1                     i1l76:
   881  00C1  0821               	movf	??_BtnInterrupt+1,w
   882  00C2  008A               	movwf	10
   883  00C3  0E20               	swapf	??_BtnInterrupt,w
   884  00C4  0083               	movwf	3
   885  00C5  0EDE               	swapf	btemp,f
   886  00C6  0E5E               	swapf	btemp,w
   887  00C7  0009               	retfie
   888  00C8                     __end_of_BtnInterrupt:
   889                           
   890                           	psect	intentry
   891  0004                     __pintentry:	
   892                           ;incstack = 0
   893                           ; Regs used in _BtnInterrupt: [wreg+status,2+status,0+pclath+cstack]
   894                           
   895  0004                     interrupt_function:
   896  005E                     saved_w	set	btemp
   897  0004  00DE               	movwf	btemp
   898  0005  0E03               	swapf	3,w
   899  0006  1283               	bcf	3,5	;RP0=0, select bank0
   900  0007  00A0               	movwf	??_BtnInterrupt
   901  0008  080A               	movf	10,w
   902  0009  00A1               	movwf	??_BtnInterrupt+1
   903  000A  28B8               	ljmp	_BtnInterrupt
   904                           
   905                           	psect	text6
   906  00C8                     __ptext6:	
   907 ;; *************** function _ButtonEvent *****************
   908 ;; Defined at:
   909 ;;		line 12 in file "hardware.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0
   923 ;;      Params:         0       0
   924 ;;      Locals:         0       0
   925 ;;      Temps:          0       0
   926 ;;      Totals:         0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_BtnInterrupt
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _ButtonEvent
   938  00C8                     _ButtonEvent:
   939  00C8                     i1l839:	
   940                           ;incstack = 0
   941                           ; Regs used in _ButtonEvent: [wreg]
   942                           
   943                           
   944                           ;hardware.c: 14:        GP4 = ~GP4;
   945  00C8  3010               	movlw	16
   946  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   947  00CA  0685               	xorwf	5,f
   948                           
   949                           ;hardware.c: 15:        GP5 = ~GP5;
   950  00CB  3020               	movlw	32
   951  00CC  0685               	xorwf	5,f
   952                           
   953                           ;hardware.c: 16:        GP0 = ~GP0;
   954  00CD  3001               	movlw	1
   955  00CE  0685               	xorwf	5,f
   956  00CF                     i1l70:
   957  00CF  0008               	return
   958  00D0                     __end_of_ButtonEvent:
   959  005E                     btemp	set	94	;btemp
   960  005E                     wtemp0	set	94
   961                           
   962                           	psect	config
   963                           
   964                           ;Config register CONFIG @ 0x2007
   965                           ;	Oscillator Selection bits
   966                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   967                           ;	Watchdog Timer Enable bit
   968                           ;	WDTE = OFF, WDT disabled
   969                           ;	Power-Up Timer Enable bit
   970                           ;	PWRTE = ON, PWRT enabled
   971                           ;	GP3/MCLR pin function select
   972                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   973                           ;	Brown-out Detect Enable bit
   974                           ;	BOREN = ON, BOD enabled
   975                           ;	Code Protection bit
   976                           ;	CP = OFF, Program Memory code protection is disabled
   977                           ;	Data Code Protection bit
   978                           ;	CPD = OFF, Data memory code protection is disabled
   979  2007                     	org	8199
   980  2007  31C4               	dw	12740

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      8       9

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _BtnInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_initUc
    _initUc->_eeprom_read

Critical Paths under _BtnInterrupt in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     218
                                              6 BANK0      2     2      0
                          _IRQConfig
                       _eeprom_write
                             _initUc
 ---------------------------------------------------------------------------------
 (1) _initUc                                               2     2      0      22
                                              4 BANK0      2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          2     2      0      22
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     196
                                              2 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _IRQConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _BtnInterrupt                                         2     2      0       0
                                              0 BANK0      2     2      0
                        _ButtonEvent
 ---------------------------------------------------------------------------------
 (4) _ButtonEvent                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IRQConfig
   _eeprom_write
   _initUc
     _eeprom_read

 _BtnInterrupt (ROOT)
   _ButtonEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      8       9       4       14.5%
ABS                  0      0       9       5        0.0%
DATA                 0      0       9       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 08 14:42:02 2022

                     l41 0076                       l67 00D4                       u80 00AB  
                     u81 00AA                       u90 0066                       u91 0065  
                    l171 00B7                      l192 0093                      l169 00A5  
                    l195 00A2                      l188 0079                      l189 0079  
                    l801 0052                      l811 0066                      l803 0053  
                    l821 008C                      l813 006D                      l805 0054  
                    l831 009B                      l823 008E                      l815 0072  
                    l807 0056                      l833 009C                      l825 0092  
                    l817 007E                      l809 005F                      l841 0010  
                    l835 00A1                      l827 0096                      l819 0086  
                    l851 0033                      l843 0011                      l837 00D0  
                    l829 009A                      l853 0039                      l845 001B  
                    l791 0048                      l855 0043                      l847 002C  
                    l785 00AB                      l793 004C                      l849 002D  
                    l795 004E                      _GP0 0028                      l797 0050  
                    l789 0047                      l799 0051                      _GP4 002C  
                    _GP5 002D                      u100 006D                      u101 006C  
                    u110 007E                      u111 007D                      u120 0092  
                    u121 0091                      u130 00A1                      u131 00A0  
                    u140 0033                      u141 0032                      u167 0016  
                    u177 0027                      u187 003E                      u197 005A  
                   _GPIO 0005                     _INTF 0059                     i1l70 00CF  
                   i1l76 00C1           ??_eeprom_write 0023                     _main 0010  
                   btemp 005E                     start 000B            ??_ButtonEvent 0000  
     __size_of_IRQConfig 0005                    ?_main 0020                    _EEADR 009B  
                  _CMCON 0019                    _ANSEL 009F                    i1l861 00BD  
                  i1l839 00C8                    i1l863 00BE                    i1l857 00B8  
                  i1l859 00BC                    u15_20 00BC                    u15_21 00BB  
                  _VRCON 0099     __end_of_BtnInterrupt 00C8                    pclath 000A  
                  status 0003                    wtemp0 005E          __initialization 000C  
           __end_of_main 0047                   ??_main 0026      __end_of_ButtonEvent 00D0  
                 _ADCON0 001F                   _EEDATA 009A                   _EECON1 009C  
                 _EECON2 009D        __end_of_IRQConfig 00D5     __size_of_eeprom_read 0015  
                 _initUc 0047     __end_of_eeprom_write 00A3                   saved_w 005E  
__end_of__initialization 000E          eeprom_read@addr 0023           __pcstackCOMMON 0000  
            _ButtonEvent 00C8    __size_of_BtnInterrupt 0010           _OPTION_REGbits 0081  
      eeprom_write@value 0022               __pbssBANK0 0028               __pmaintext 0010  
           _BtnInterrupt 00B8               __pintentry 0004                  ?_initUc 0020  
                _TRISIO0 0428                  _TRISIO2 042A                  _TRISIO4 042C  
                _TRISIO5 042D    __size_of_eeprom_write 002C          __size_of_initUc 0030  
                __ptext1 0047                  __ptext2 00A3                  __ptext3 0077  
                __ptext4 00D0                  __ptext5 00B8                  __ptext6 00C8  
   end_of_initialization 000E             _eeprom_write 0077                _IRQConfig 00D0  
          ??_eeprom_read 0022               ?_IRQConfig 0020             ?_ButtonEvent 0020  
         __end_of_initUc 0077      start_initialization 000C      __end_of_eeprom_read 00B8  
               ??_initUc 0024                ___latbits 0000            __pcstackBANK0 0020  
       eeprom_write@addr 0024              ??_IRQConfig 0000        interrupt_function 0004  
            _eeprom_read 00A3     __size_of_ButtonEvent 0008               _EECON1bits 009C  
          __size_of_main 0037            ?_BtnInterrupt 0020               _INTCONbits 000B  
               intlevel1 0000           ??_BtnInterrupt 0020          _stateChangeFlag 0028  
          ?_eeprom_write 0022               _STATUSbits 0003             ?_eeprom_read 0020  
