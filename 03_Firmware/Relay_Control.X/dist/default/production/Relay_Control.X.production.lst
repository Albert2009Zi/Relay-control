

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jun 27 21:54:13 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0019                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0090                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0019                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  008C                     	;# 
   132  008E                     	;# 
   133  0090                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0096                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  000B                     _INTCON	set	11
   146  0005                     _GPIO	set	5
   147  0019                     _CMCON	set	25
   148  001F                     _ADCON0	set	31
   149  0059                     _INTF	set	89
   150  002D                     _GP5	set	45
   151  002C                     _GP4	set	44
   152  0028                     _GP0	set	40
   153  0081                     _OPTION_REG	set	129
   154  0085                     _TRISIO	set	133
   155  0099                     _VRCON	set	153
   156  009F                     _ANSEL	set	159
   157  042A                     _TRISIO2	set	1066
   158                           
   159                           	psect	cinit
   160  000C                     start_initialization:	
   161                           ; #config settings
   162                           
   163  000C                     __initialization:
   164  000C                     end_of_initialization:	
   165                           ;End of C runtime variable initialization code
   166                           
   167  000C                     __end_of__initialization:
   168  000C  0183               	clrf	3
   169  000D  283D               	ljmp	_main	;jump to C main() function
   170                           
   171                           	psect	cstackCOMMON
   172  0000                     __pcstackCOMMON:
   173  0000                     ??_main:
   174  0000                     ??_ButtonEvent:	
   175                           ; 1 bytes @ 0x0
   176                           
   177                           
   178                           	psect	cstackBANK0
   179  0020                     __pcstackBANK0:	
   180                           ; 1 bytes @ 0x0
   181                           
   182  0020                     ?_InituC:
   183  0020                     ?_main:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0020                     ?_ButtonEvent:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0020                     ?_ISR:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0020                     ??_ISR:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197  0020                     	ds	2
   198  0022                     ??_InituC:
   199                           
   200                           ; 1 bytes @ 0x2
   201  0022                     	ds	1
   202                           
   203                           	psect	maintext
   204  003D                     __pmaintext:	
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 29 in file "main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, pclath, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : B00/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0
   224 ;;      Params:         0       0
   225 ;;      Locals:         0       0
   226 ;;      Temps:          0       0
   227 ;;      Totals:         0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels required when called:    3
   230 ;; This function calls:
   231 ;;		_InituC
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _main
   239  003D                     _main:
   240  003D                     l696:	
   241                           ;incstack = 0
   242                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   243                           
   244  003D  200E               	fcall	_InituC
   245  003E                     l7:
   246  003E                     l8:
   247  003E  283E               	goto	l7
   248  003F  280B               	ljmp	start
   249  0040                     __end_of_main:
   250                           
   251                           	psect	text1
   252  000E                     __ptext1:	
   253 ;; *************** function _InituC *****************
   254 ;; Defined at:
   255 ;;		line 6 in file "hardware.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0
   269 ;;      Params:         0       0
   270 ;;      Locals:         0       0
   271 ;;      Temps:          0       1
   272 ;;      Totals:         0       1
   273 ;;Total ram usage:        1 bytes
   274 ;; Hardware stack levels used:    1
   275 ;; Hardware stack levels required when called:    2
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _InituC
   285  000E                     _InituC:
   286  000E                     l672:	
   287                           ;incstack = 0
   288                           ; Regs used in _InituC: [wreg+status,2+status,0]
   289                           
   290                           
   291                           ;hardware.c: 8:     ANSEL = 0x00;
   292  000E  1683               	bsf	3,5	;RP0=1, select bank1
   293  000F  019F               	clrf	31	;volatile
   294                           
   295                           ;hardware.c: 9:  ADCON0 = 0x00;
   296  0010  1283               	bcf	3,5	;RP0=0, select bank0
   297  0011  019F               	clrf	31	;volatile
   298  0012                     l674:
   299                           
   300                           ;hardware.c: 10:  CMCON = 0x07;
   301  0012  3007               	movlw	7
   302  0013  0099               	movwf	25	;volatile
   303  0014                     l676:
   304                           
   305                           ;hardware.c: 11:  VRCON = 0x00;
   306  0014  1683               	bsf	3,5	;RP0=1, select bank1
   307  0015  0199               	clrf	25	;volatile
   308  0016                     l678:
   309                           
   310                           ;hardware.c: 12:  TRISIO = 0x00;
   311  0016  0185               	clrf	5	;volatile
   312  0017                     l680:
   313                           
   314                           ;hardware.c: 13:  GPIO = 0x00;
   315  0017  1283               	bcf	3,5	;RP0=0, select bank0
   316  0018  0185               	clrf	5	;volatile
   317  0019                     l682:
   318                           
   319                           ;hardware.c: 15:     TRISIO2 = 1;
   320  0019  1683               	bsf	3,5	;RP0=1, select bank1
   321  001A  1505               	bsf	5,2	;volatile
   322  001B                     l684:
   323                           
   324                           ;hardware.c: 17:  INTCON |= 0x90;
   325  001B  3090               	movlw	144
   326  001C  1283               	bcf	3,5	;RP0=0, select bank0
   327  001D  00A2               	movwf	??_InituC
   328  001E  0822               	movf	??_InituC,w
   329  001F  048B               	iorwf	11,f	;volatile
   330  0020                     l686:
   331                           
   332                           ;hardware.c: 18:  OPTION_REG |= 0x40;
   333  0020  1683               	bsf	3,5	;RP0=1, select bank1
   334  0021  1701               	bsf	1,6	;volatile
   335  0022                     l688:
   336                           
   337                           ;hardware.c: 21:     GP0 = 0;
   338  0022  1283               	bcf	3,5	;RP0=0, select bank0
   339  0023  1005               	bcf	5,0	;volatile
   340  0024                     l690:
   341                           
   342                           ;hardware.c: 24:     GP4 = 1;
   343  0024  1605               	bsf	5,4	;volatile
   344  0025                     l692:
   345                           
   346                           ;hardware.c: 27:     GP5 = 0;
   347  0025  1285               	bcf	5,5	;volatile
   348  0026                     l39:
   349  0026  0008               	return
   350  0027                     __end_of_InituC:
   351                           
   352                           	psect	text2
   353  0027                     __ptext2:	
   354 ;; *************** function _ISR *****************
   355 ;; Defined at:
   356 ;;		line 39 in file "hardware.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0
   370 ;;      Params:         0       0
   371 ;;      Locals:         0       0
   372 ;;      Temps:          0       2
   373 ;;      Totals:         0       2
   374 ;;Total ram usage:        2 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; Hardware stack levels required when called:    1
   377 ;; This function calls:
   378 ;;		_ButtonEvent
   379 ;; This function is called by:
   380 ;;		Interrupt level 1
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _ISR
   386  0027                     _ISR:
   387  0027                     i1l698:
   388                           
   389                           ;hardware.c: 41:  if(INTF)
   390  0027  1C8B               	btfss	11,1	;volatile
   391  0028  282A               	goto	u2_21
   392  0029  282B               	goto	u2_20
   393  002A                     u2_21:
   394  002A  282D               	goto	i1l48
   395  002B                     u2_20:
   396  002B                     i1l700:
   397                           
   398                           ;hardware.c: 42:  {;hardware.c: 43:   ButtonEvent();
   399  002B  2035               	fcall	_ButtonEvent
   400  002C                     i1l702:
   401                           
   402                           ;hardware.c: 44:   INTF = 0;
   403  002C  108B               	bcf	11,1	;volatile
   404  002D                     i1l48:
   405  002D  1283               	bcf	3,5	;RP0=0, select bank0
   406  002E  0821               	movf	??_ISR+1,w
   407  002F  008A               	movwf	10
   408  0030  0E20               	swapf	??_ISR,w
   409  0031  0083               	movwf	3
   410  0032  0EDE               	swapf	btemp,f
   411  0033  0E5E               	swapf	btemp,w
   412  0034  0009               	retfie
   413  0035                     __end_of_ISR:
   414                           
   415                           	psect	intentry
   416  0004                     __pintentry:	
   417                           ;incstack = 0
   418                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   419                           
   420  0004                     interrupt_function:
   421  005E                     saved_w	set	btemp
   422  0004  00DE               	movwf	btemp
   423  0005  0E03               	swapf	3,w
   424  0006  1283               	bcf	3,5	;RP0=0, select bank0
   425  0007  00A0               	movwf	??_ISR
   426  0008  080A               	movf	10,w
   427  0009  00A1               	movwf	??_ISR+1
   428  000A  2827               	ljmp	_ISR
   429                           
   430                           	psect	text3
   431  0035                     __ptext3:	
   432 ;; *************** function _ButtonEvent *****************
   433 ;; Defined at:
   434 ;;		line 32 in file "hardware.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0
   448 ;;      Params:         0       0
   449 ;;      Locals:         0       0
   450 ;;      Temps:          0       0
   451 ;;      Totals:         0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_ISR
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _ButtonEvent
   463  0035                     _ButtonEvent:
   464  0035                     i1l694:	
   465                           ;incstack = 0
   466                           ; Regs used in _ButtonEvent: [wreg]
   467                           
   468                           
   469                           ;hardware.c: 34:        GP4 = ~GP4;
   470  0035  3010               	movlw	16
   471  0036  1283               	bcf	3,5	;RP0=0, select bank0
   472  0037  0685               	xorwf	5,f
   473                           
   474                           ;hardware.c: 35:        GP5 = ~GP5;
   475  0038  3020               	movlw	32
   476  0039  0685               	xorwf	5,f
   477                           
   478                           ;hardware.c: 36:        GP0 = ~GP0;
   479  003A  3001               	movlw	1
   480  003B  0685               	xorwf	5,f
   481  003C                     i1l42:
   482  003C  0008               	return
   483  003D                     __end_of_ButtonEvent:
   484  005E                     btemp	set	94	;btemp
   485  005E                     wtemp0	set	94
   486                           
   487                           	psect	config
   488                           
   489                           ;Config register CONFIG @ 0x2007
   490                           ;	Oscillator Selection bits
   491                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   492                           ;	Watchdog Timer Enable bit
   493                           ;	WDTE = OFF, WDT disabled
   494                           ;	Power-Up Timer Enable bit
   495                           ;	PWRTE = OFF, PWRT disabled
   496                           ;	GP3/MCLR pin function select
   497                           ;	MCLRE = ON, GP3/MCLR pin function is MCLR
   498                           ;	Brown-out Detect Enable bit
   499                           ;	BOREN = ON, BOD enabled
   500                           ;	Code Protection bit
   501                           ;	CP = OFF, Program Memory code protection is disabled
   502                           ;	Data Code Protection bit
   503                           ;	CPD = OFF, Data memory code protection is disabled
   504  2007                     	org	8199
   505  2007  31F4               	dw	12788

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      3       3

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_InituC

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                             _InituC
 ---------------------------------------------------------------------------------
 (1) _InituC                                               1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
                        _ButtonEvent
 ---------------------------------------------------------------------------------
 (3) _ButtonEvent                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InituC

 _ISR (ROOT)
   _ButtonEvent

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      3       3       4        4.8%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jun 27 21:54:13 2022

                      l7 003E                        l8 003E                       l39 0026  
                    l680 0017                      l672 000E                      l690 0024  
                    l682 0019                      l674 0012                      l692 0025  
                    l684 001B                      l676 0014                      l686 0020  
                    l678 0016                      l688 0022                      l696 003D  
                    _GP0 0028                      _GP4 002C                      _GP5 002D  
                    _ISR 0027                     ?_ISR 0020                     _GPIO 0005  
                   _INTF 0059                     i1l42 003C                     i1l48 002D  
                   u2_20 002B                     u2_21 002A                     _main 003D  
                   btemp 005E                     start 000B                    ??_ISR 0020  
          ??_ButtonEvent 0000                    ?_main 0020                    _CMCON 0019  
                  _ANSEL 009F                    i1l700 002B                    i1l702 002C  
                  i1l694 0035                    i1l698 0027                    _VRCON 0099  
                  pclath 000A                    status 0003                    wtemp0 005E  
        __initialization 000C             __end_of_main 0040                   ??_main 0000  
    __end_of_ButtonEvent 003D                   _ADCON0 001F                   _INTCON 000B  
                 _TRISIO 0085                   _InituC 000E                   saved_w 005E  
__end_of__initialization 000C           __pcstackCOMMON 0000              _ButtonEvent 0035  
                ?_InituC 0020               __pmaintext 003D               __pintentry 0004  
                _TRISIO2 042A          __size_of_InituC 0019                  __ptext1 000E  
                __ptext2 0027                  __ptext3 0035             __size_of_ISR 000E  
   end_of_initialization 000C           __end_of_InituC 0027             ?_ButtonEvent 0020  
    start_initialization 000C              __end_of_ISR 0035                 ??_InituC 0022  
              ___latbits 0000            __pcstackBANK0 0020        interrupt_function 0004  
   __size_of_ButtonEvent 0008            __size_of_main 0003                 intlevel1 0000  
             _OPTION_REG 0081  
